#Adwait Labde
#roll no:29
#IT-B12

library(ggplot2) # Data visualization
library(readr) 


data = read.csv("C:/Users/svlab/Desktop/college proj/Airplane_Crashes_and_Fatalities_Since_1908.csv", header = T)
library("tidyverse")
#library(tidyverse) will load the core tidyverse packages:
# ggplot2, for data visualisation.
#dplyr, for data manipulation.
#tidyr, for data tidying.
#readr, for data import.
#purrr, for functional programming.
#tibble, for tibbles, a modern re-imagining of data frames.
#stringr, for strings.
#forcats, for factors.

library("lubridate")
library("DataExplorer")
library("ggplot2")
library("date")
library("plyr")
library("dplyr")
library("data.table")
library("plotly")
library("magrittr")
library("plotrix")
library("corrplot")
 str(data)
#Cleaning and EDA on the data________________________________________________________________________________________________

# Change the Date format
data$Date <- as.Date(data$Date, "%m/%d/%Y")

# Extract the Year, Month and Day from the Date
data$Year = as.integer(format(data$Date, "%Y"))
data$Month = as.integer(format(data$Date, "%m"))
data$Day = as.integer(format(data$Date, "%d"))


# Sum accidents by Year, Month and Day
data.year = data['Year']
data.year = data.frame(table(data.year))
ggplot(data.year, aes(x=data.year, y=Freq, group=1)) + 
  geom_line(linetype=1, size=2, color="blue") + 
  geom_point(size=4, shape=21, fill="red") + 
  xlab("Year") + ylab("Number of Crashes") + 
  ggtitle("Total Number of Crashes Through The Years") + 
  scale_x_discrete(breaks=seq(1908, 2009, 10))

data.month = data['Month']
data.month = data.frame(table(data.month))
ggplot(data.month, aes(x=data.month, y=Freq, group=1)) + 
  geom_line(linetype=1, size=2, color="blue") + 
  geom_point(size=4, shape=21, fill="red") + 
  xlab("Month") + ylab("Number of Crashes") + 
  ggtitle("Total Number of Crashes Through The Months") 

data.day = data['Day']
data.day = data.frame(table(data.day))
ggplot(data.day, aes(x=data.day, y=Freq, group=1)) + 
  geom_line(linetype=1, size=2, color="blue") + 
  geom_point(size=4, shape=21, fill="red") + 
  xlab("Day") + ylab("Number of Crashes") + 
  ggtitle("Total Number of Crashes Through The Days") 


# Removing any fatalities that are NA and only keeping those with at least 1 fatality
fatalities = as.data.table(subset(data, data$Fatalities >= 1 & !is.na(data$Fatalities)))

#Sum Fatalities by Year, Month and Day
yearly_fatalities = fatalities[, sum(Fatalities), by=Year]
names(yearly_fatalities) = c("Year", "Fatalities")
ggplot(yearly_fatalities, aes(x=Year, y=Fatalities, group=1)) + 
  geom_line(linetype=1, size=2, color="blue") + 
  geom_point(size=4, shape=21, fill="red") + 
  xlab("Year") + 
  ylab("Number of Fatalities") + 
  ggtitle("Total Number of Fatalities Through The Years") + 
  scale_x_continuous(breaks=seq(1908, 2009, 10))

monthly_fatalities = fatalities[, sum(Fatalities), by=Month]
names(monthly_fatalities) = c("Month", "Fatalities")
ggplot(monthly_fatalities, aes(x=Month, y=Fatalities, group=1)) + 
  geom_line(linetype=1, size=2, color="blue") + 
  geom_point(size=4, shape=21, fill="red") + 
  xlab("Month") + 
  ylab("Number of Fatalities") + 
  ggtitle("Total Number of Fatalities Through The Months") + 
  scale_x_continuous(breaks=seq(0, 12, 1))

daily_fatalities = fatalities[, sum(Fatalities), by=Day]
names(daily_fatalities) = c("Day", "Fatalities")
ggplot(daily_fatalities, aes(x=Day, y=Fatalities, group=1)) + 
  geom_line(linetype=1, size=2, color="blue") + 
  geom_point(size=4, shape=21, fill="red") + 
  xlab("Day") + ylab("Number of Fatalities") + 
  ggtitle("Total Number of Fatalities Through The Days") + 
  scale_x_continuous(breaks=seq(1, 31, 2))


#Calculating the number of survivors
data$Survivor = data$Aboard - data$Fatalities

# Removing any people Aboard that are NA and only keeping those with at least 1 Aboard
survivors = as.data.table(subset(data, data$Survivor >= 1 & !is.na(data$Survivor)))

#Sum Survivors by Year, Month and Day

yearly_survivors = survivors[, sum(Survivor), by=Year]
names(yearly_survivors) = c("Year", "Survivors")
ggplot(yearly_survivors, aes(x=Year, y=Survivors, group=1)) + 
  geom_line(linetype=1, size=2, color="blue") + 
  geom_point(size=4, shape=21, fill="red") + 
  xlab("Year") + ylab("Number of Survivors") + 
  ggtitle("Total Number of Survivors Through The Years") + 
  scale_x_continuous(breaks=seq(1908, 2009, 10))

monthly_survivors = survivors[, sum(Survivor), by=Month]
names(monthly_survivors) = c("Month", "Survivors")
ggplot(monthly_survivors, aes(x=Month, y=Survivors, group=1)) + 
  geom_line(linetype=1, size=2, color="blue") + 
  geom_point(size=4, shape=21, fill="red") + 
  xlab("Month") + ylab("Number of Survivors") + 
  ggtitle("Total Number of Survivors Through The Months") + 
  scale_x_continuous(breaks=seq(0, 12, 1))

daily_survivors = survivors[, sum(Survivor), by=Day]
names(daily_survivors) = c("Day", "Survivors")
ggplot(daily_survivors, aes(x=Day, y=Survivors, group=1)) + 
  geom_line(linetype=1, size=2, color="blue") + 
  geom_point(size=4, shape=21, fill="red") + 
  xlab("Day") + 
  ylab("Number of Survivors") + 
  ggtitle("Total Number of Survivors Through The Days") + 
  scale_x_continuous(breaks=seq(1, 31, 2))

#We conclude that the crashes were maximum for the year 1970's 
#At start people did not use to travel much by airplane but as needs increased the people travelling by planes increased
#Due to lack od technological advancements in 1970's there were many plane crashes in that phase hence fatalities were also more
#As the technology progressed by 2008 again crashes were reduced to a lager extent.


#Combine the Yearly Passengers, Survivors and Fatalities so as to produce a single graph 

yearly_data = merge(yearly_passengers, yearly_fatalities, by = "Year")
yearly_data$Survivor = yearly_data$Passengers - yearly_data$Fatalities

ggplot(yearly_data, aes(x=Year)) +
  geom_line(aes(y=Passengers, color = "Passengers"),linetype=1, size=1.5, color="blue") +
  geom_point(aes(y=Passengers, color = "Passengers"),size=4, shape=18) +
  geom_line(aes(y=Fatalities, color = "Fatalities"),linetype=1, size=1.5, color="red") +
  geom_point(aes(y=Fatalities, color = "Fatalities"),size=4, shape=18) +
  geom_line(aes(y=Survivor, color = "Survivor"),linetype=1, size=1.5, color="purple") +
  geom_point(aes(y=Survivor, color = "Survivor"),size=4, shape=18) +
  xlab("Year") +
  ylab("Count") +
  ggtitle("Total Number of Passengers, Survivors & Fatalities Through The Years") +
  scale_x_continuous(breaks=seq(1908, 2009, 10)) + 
  theme_bw() + 
  theme(legend.position=c(0.3, 0.7))


#Combine the Monthly Passengers and Fatalities so as to produce a single graph for them

monthly_data = merge(monthly_passengers, monthly_fatalities, by = "Month")
monthly_data$Survivor = monthly_data$Passengers - monthly_data$Fatalities
ggplot(monthly_data, aes(x=Month)) + 
  geom_line(aes(y=Passengers, color = "Passengers"),linetype=1, size=1.5, color="blue") +
  geom_point(aes(y=Passengers, color = "Passengers"),size=4, shape=18) +
  geom_line(aes(y=Fatalities, color = "Fatalities"),linetype=1, size=1.5, color="red") +
  geom_point(aes(y=Fatalities, color = "Fatalities"),size=4, shape=18) +
  geom_line(aes(y=Survivor, color = "Survivor"),linetype=1, size=1.5, color="purple") +
  geom_point(aes(y=Survivor, color = "Survivor"),size=4, shape=18) +
  xlab("Month") +
  ylab("Count") +
  ggtitle("Total Number of Passengers, Survivors & Fatalities Through The Months") +
  scale_x_continuous(breaks=seq(1, 12, 1)) + 
  theme_bw() + 
  theme(legend.position=c(0.3, 0.8))

#Combine the Daily Passengers and Fatalities so as to produce a single graph for them

daily_data = merge(daily_passengers, daily_fatalities, by = "Day")
daily_data$Survivor = daily_data$Passengers - daily_data$Fatalities
ggplot(daily_data, aes(x=Day)) + 
  geom_line(aes(y=Passengers, color = "Passengers"),linetype=1, size=1.5, color="blue") +
  geom_point(aes(y=Passengers, color = "Passengers"),size=4, shape=18) +
  geom_line(aes(y=Fatalities, color = "Fatalities"),linetype=1, size=1.5, color="red") +
  geom_point(aes(y=Fatalities, color = "Fatalities"),size=4, shape=18) +
  geom_line(aes(y=Survivor, color = "Survivor"),linetype=1, size=1.5, color="purple") +
  geom_point(aes(y=Survivor, color = "Survivor"),size=4, shape=18) +
  xlab("Day") +
  ylab("Count") +
  ggtitle("Total Number of Passengers, Survivors & Fatalities Through The Days") +
  scale_x_continuous(breaks=seq(1, 31, 1)) + 
  theme_bw() + 
  theme(legend.position=c(0.5, 0.85))

# Summing Fatalities by Operator

operator = aggregate(data$Fatalities, by=list(Operator=data$Operator), FUN=sum)
names(operator) = c("Operator", "Fatalities")

#Drop the rows with an NA for Fatalities

operator = subset(operator, Fatalities != "NA")

#Drop the 1st row since it has no Operator name

operator = operator[-c(1),]

operator = operator[ order(-operator$Fatalities), ]

ggplot(operator[1:20,], aes(x=reorder(factor(Operator), Fatalities), y=Fatalities, alpha=Fatalities)) + 
  geom_bar(stat = "identity", fill="blue") + 
  xlab("Operator") + 
  ylab("Fatalities") + 
  ggtitle("Top 20 Operators with the most Fatalities") + 
  coord_flip()

# Summing Fatalities by Plane Type

plane_type = aggregate(data$Fatalities, by=list(Type=data$Type), FUN=sum)
names(plane_type) = c("Type", "Fatalities")

#Drop the rows with an NA for Fatalities

plane_type = subset(plane_type, Fatalities != "NA")

plane_type = plane_type[ order(-plane_type$Fatalities), ]

ggplot(plane_type[1:20,], aes(x=reorder(factor(Type), Fatalities), y=Fatalities, alpha=Fatalities)) + 
  geom_bar(stat = "identity", fill="blue") + 
  xlab("Plane Type") + 
  ylab("Fatalities") + 
  ggtitle("Top 20 Plane Types with the most Fatalities") + 
  coord_flip()


# Sum accidents by Operator

data.operator = data['Operator']
data.operator = data.frame(table(data.operator))
data.operator = data.operator[-c(1),]
data.operator = data.operator[ order(-data.operator$Freq), ]

ggplot(data.operator[1:20,], aes(x=reorder(factor(data.operator), Freq), y=Freq, alpha=Freq)) + 
  geom_bar(stat = "identity", fill="blue") + 
  xlab("Operator") + 
  ylab("Number of Crashes") + 
  ggtitle("Top 20 Operators with the most Crashes") + 
  coord_flip()


# Sum accidents by Plane Type

data.type = data['Type']
data.type = data.frame(table(data.type))
data.type = data.type[-c(1),]
data.type = data.type[ order(-data.type$Freq), ]

ggplot(data.type[1:20,], aes(x=reorder(factor(data.type), Freq), y=Freq, alpha=Freq)) + 
  geom_bar(stat = "identity", fill="blue") + 
  xlab("Plane Type") + 
  ylab("Number of Crashes") + 
  ggtitle("Top 20 Plane Types with the most Crashes") + 
  coord_flip()

#What type of flight are more likely to save my life when it crashed?
#Since I'm just an ordiniary person, all I cared about is commercial flight.
#I want to know what type of flight will have more passengers survived even when there were an accident occured. 
#Maybe some airplanes are safer due to their design or ease of control.


total_death_rate_by_type = data %>%
  group_by(Type) %>%
  summarise(total_death_rate = sum(Fatalities)/sum(Aboard),
            total_aboard = sum(Aboard),
            total_flights = n(),
            avg_boarding = floor(total_aboard/total_flights/10) * 10,  # is it big or small plane, round to 10
            service_begin = min(Date),
            service_end = max(Date)) %>%
  filter(total_aboard > 500, total_flights > 1) %>% # we filter flight that are more than 500 people aboarded during this 100 years
  arrange(total_aboard)

death_rate = data %>%
  filter(Type %in% total_death_rate_by_type$Type) %>%
  mutate(death_rate = Fatalities/Aboard)
total_death_rate_by_type

#Are the planes planes big or small
death_rate %>%
  inner_join(total_death_rate_by_type, by='Type') %>%
  mutate(plane_size = avg_boarding) %>% # naively divide plane size by a increment of 50 passengers on board
  ggplot(aes(avg_boarding, death_rate, group=plane_size)) +
  geom_boxplot(outlier.size = -1) +
  geom_jitter(size=0.1, alpha=0.2, width=0.3) +
  theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) +
  labs(x="Average Boarding Passengers", "Fatalities Rate")

#Outcome:
#It doesn't seem very clear, but maybe the plot shows that planes with the size under 100 passenger 
#are more dangerous then those with over 100 passengers.
#Bigger planes may save more people's life when they crashed


#Did newer type of flight save more people's life even when it crashed?___________________________________

total_death_rate_by_type %>%
  ggplot(aes(reorder(Type, service_begin), total_death_rate, col=service_begin, size=avg_boarding)) +
  geom_point() +
  theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) +
  labs(x='Type of Flight', size='Plane Size')

#Outcome:
#There's an decreasing trend on the plot. It suggest us when newer plane crashes, 
#it won't kill that many people as the old ones do. But it is not that significant as the plane size.


